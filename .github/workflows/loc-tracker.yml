name: Lines of Code Tracker

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize]

jobs:
  track-loc:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history needed for comparisons

      - name: Calculate LOC changes
        id: loc
        run: |
          # For PRs, compare against base branch
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
            
            # Get stats excluding common non-code files
            STATS=$(git diff --shortstat $BASE_SHA..$HEAD_SHA -- . ':(exclude)package-lock.json' ':(exclude)yarn.lock' ':(exclude)*.min.js' ':(exclude)*.min.css')
            NUMSTAT=$(git diff --numstat $BASE_SHA..$HEAD_SHA -- . ':(exclude)package-lock.json' ':(exclude)yarn.lock' ':(exclude)*.min.js' ':(exclude)*.min.css')
            
            # Extract numbers
            INSERTIONS=$(echo "$STATS" | grep -oE '[0-9]+ insertion' | grep -oE '[0-9]+' || echo "0")
            DELETIONS=$(echo "$STATS" | grep -oE '[0-9]+ deletion' | grep -oE '[0-9]+' || echo "0")
            FILES_CHANGED=$(echo "$STATS" | grep -oE '[0-9]+ file' | grep -oE '[0-9]+' || echo "0")
            
            # Calculate net change
            NET_CHANGE=$((INSERTIONS - DELETIONS))
            
            # Get file breakdown for top 10 changed files
            FILE_BREAKDOWN=$(echo "$NUMSTAT" | sort -k1 -nr | head -10 | awk '{printf "| %-50s | +%-6s | -%-6s |\n", substr($3,1,50), $1, $2}')
            
            # Set outputs
            echo "insertions=$INSERTIONS" >> $GITHUB_OUTPUT
            echo "deletions=$DELETIONS" >> $GITHUB_OUTPUT
            echo "net_change=$NET_CHANGE" >> $GITHUB_OUTPUT
            echo "files_changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
            echo "file_breakdown<<EOF" >> $GITHUB_OUTPUT
            echo "$FILE_BREAKDOWN" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            
          else
            # For commits, show stats for the last commit
            STATS=$(git show --shortstat HEAD -- . ':(exclude)package-lock.json' ':(exclude)yarn.lock' ':(exclude)*.min.js' ':(exclude)*.min.css')
            COMMIT_MSG=$(git log -1 --pretty=format:"%s")
            
            INSERTIONS=$(echo "$STATS" | grep -oE '[0-9]+ insertion' | grep -oE '[0-9]+' || echo "0")
            DELETIONS=$(echo "$STATS" | grep -oE '[0-9]+ deletion' | grep -oE '[0-9]+' || echo "0")
            FILES_CHANGED=$(echo "$STATS" | grep -oE '[0-9]+ file' | grep -oE '[0-9]+' || echo "0")
            NET_CHANGE=$((INSERTIONS - DELETIONS))
            
            echo "insertions=$INSERTIONS" >> $GITHUB_OUTPUT
            echo "deletions=$DELETIONS" >> $GITHUB_OUTPUT
            echo "net_change=$NET_CHANGE" >> $GITHUB_OUTPUT
            echo "files_changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
            echo "commit_msg=$COMMIT_MSG" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const insertions = '${{ steps.loc.outputs.insertions }}';
            const deletions = '${{ steps.loc.outputs.deletions }}';
            const netChange = '${{ steps.loc.outputs.net_change }}';
            const filesChanged = '${{ steps.loc.outputs.files_changed }}';
            const fileBreakdown = `${{ steps.loc.outputs.file_breakdown }}`;

            const netChangeEmoji = netChange > 0 ? '📈' : netChange < 0 ? '📉' : '⏸️';
            const netChangeColor = netChange > 0 ? '00ff00' : netChange < 0 ? 'ff0000' : 'gray';

            const comment = `## 📊 Lines of Code Analysis

            | Metric | Value |
            |--------|-------|
            | **Files Changed** | ${filesChanged} |
            | **Lines Added** | +${insertions} |
            | **Lines Removed** | -${deletions} |
            | **Net Change** | ${netChangeEmoji} ${netChange > 0 ? '+' : ''}${netChange} |

            <details>
            <summary>📁 Top Changed Files</summary>

            | File | Added | Removed |
            |------|-------|---------|
            ${fileBreakdown}

            </details>

            ![LOC Badge](https://img.shields.io/badge/Net_Change-${netChange > 0 ? '%2B' : ''}${netChange}-${netChangeColor})

            > 💡 *Excludes: package-lock.json, yarn.lock, minified files*`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Lines of Code Analysis')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Update Commit Status
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const insertions = '${{ steps.loc.outputs.insertions }}';
            const deletions = '${{ steps.loc.outputs.deletions }}';
            const netChange = '${{ steps.loc.outputs.net_change }}';

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              context: 'loc-tracker',
              description: `+${insertions} -${deletions} (net: ${netChange > 0 ? '+' : ''}${netChange})`,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/commit/${context.sha}`
            });
